Album Explorer Wiki

Overview

Album Explorer is a web application that allows users to explore, upload, and edit album recommendations. It serves as a platform for music enthusiasts to discover new music and share their favorite albums with others.

Features

Upload Album Recommendations: Users can add new album recommendations to the platform, including details such as album title, artist, genre, and a link to listen (e.g., a Spotify link).
Read Album Recommendations: Users can browse through a collection of albums recommended by other users.
Edit Album Recommendations: Users can edit the details of the albums they have uploaded in case of any changes or updates.

Technology Stack
Frontend: The frontend of the application is built using React, which provides a dynamic and responsive user interface.
Backend: The backend is developed using Node.js and Express, handling API requests and serving the frontend.
Database: MongoDB is used for storing album data, user information, and other persistent data.
Additional Libraries:
Mongoose: To model and manage data in MongoDB.
Axios: For making HTTP requests from the React frontend to the Express backend.
React Router: For handling navigation within the React application.
How to Use

Viewing Albums:

Visit the discover to see a list of all album recommendations.
There will be a link at the bottom of each album that will bring you to its spotify page in a new tab.

Adding a New Album:

Navigate to the 'Publish Album' page from the menu.
Fill in the form with the album's title, artist, genre, cover image URL, and a link to the album.
Submit the form to add the album to the list.

Editing an Album:

Click the 'Edit' button next to the album you want to edit.
Update the information in the form and submit.

Deleting an Album:

Click the 'Delete' button next to the album you want to remove.


Setting Up Locally
To set up the Album Explorer application locally:

Clone the repository from GitHub.
Navigate to the project directory and install dependencies:
bash
cd album-explorer
npm install
cd client
npm install
Start the backend and frontend servers:

// In the root directory
npm start

// In the client directory
npm start
node server.js
